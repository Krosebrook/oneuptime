{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-postgresql
    app.kubernetes.io/part-of: oneuptime
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: postgresql
    appname: oneuptime
    helm.sh/release-name: {{ .Release.Name }}
    helm.sh/release-namespace: {{ .Release.Namespace }}
  annotations:
    helm.sh/resource-policy: keep
spec:
  serviceName: {{ .Release.Name }}-postgresql-headless
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgresql
      app.kubernetes.io/component: postgresql
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgresql
        app.kubernetes.io/part-of: oneuptime
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: postgresql
        appname: oneuptime
    spec:
      {{- with .Values.postgresql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgresql.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgresql.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      initContainers:
      - name: setup-config
        image: busybox:latest
        command:
        - sh
        - -c
        - |
          # Create the postgresql.conf symlink if it doesn't exist and the bitnami config exists
          if [ -f "/var/lib/postgresql/data/postgresql/pgdata/postgresql.conf" ] && [ ! -f "/var/lib/postgresql/data/data/postgresql.conf" ]; then
            ln -sf ../postgresql/pgdata/postgresql.conf /var/lib/postgresql/data/data/postgresql.conf
          fi
          # Also link pg_hba.conf if it exists
          if [ -f "/var/lib/postgresql/data/postgresql/pgdata/pg_hba.conf" ] && [ ! -f "/var/lib/postgresql/data/data/pg_hba.conf" ]; then
            ln -sf ../postgresql/pgdata/pg_hba.conf /var/lib/postgresql/data/data/pg_hba.conf
          fi
          # Also link pg_ident.conf if it exists  
          if [ -f "/var/lib/postgresql/data/postgresql/pgdata/pg_ident.conf" ] && [ ! -f "/var/lib/postgresql/data/data/pg_ident.conf" ]; then
            ln -sf ../postgresql/pgdata/pg_ident.conf /var/lib/postgresql/data/data/pg_ident.conf
          fi
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
      containers:
      - name: postgresql
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
        {{- if .Values.postgresql.primary.containerSecurityContext }}
        securityContext:
          {{- with .Values.postgresql.primary.containerSecurityContext }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- else if .Values.containerSecurityContext }}
        securityContext:
          {{- with .Values.containerSecurityContext }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- end }}
        ports:
        - name: postgresql
          containerPort: 5432
          protocol: TCP
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.auth.database | quote }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgresql
              key: postgres-password
        - name: PGDATA
          value: "/var/lib/postgresql/data/data"
        - name: POSTGRES_INITDB_ARGS
          value: "--auth-host=md5"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready -U "postgres" -d "dbname={{ .Values.postgresql.auth.database }}" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready -U "postgres" -d "dbname={{ .Values.postgresql.auth.database }}" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
        {{- if .Values.postgresql.primary.terminationGracePeriodSeconds }}
        terminationGracePeriodSeconds: {{ .Values.postgresql.primary.terminationGracePeriodSeconds }}
        {{- end }}
        {{- with .Values.postgresql.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        {{- if .Values.postgresql.configuration }}
        - name: postgresql-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        {{- end }}
      volumes:
      {{- if .Values.postgresql.configuration }}
      - name: postgresql-config
        configMap:
          name: {{ .Release.Name }}-postgresql-config
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: {{ .Release.Name }}-postgresql
        app.kubernetes.io/part-of: oneuptime
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: postgresql
        appname: oneuptime
    spec:
      accessModes:
        - ReadWriteOnce
      {{- if .Values.postgresql.primary.persistence.storageClass }}
      {{- if (eq "-" .Values.postgresql.primary.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: {{ .Values.postgresql.primary.persistence.storageClass }}
      {{- end }}
      {{- else }}
      {{- if .Values.global.storageClass }}
      storageClassName: {{ .Values.global.storageClass }}
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.postgresql.primary.persistence.size }}
{{- end }}